{
  "hash": "884d7bcf22dc9f89842c84e41c4d7dfc",
  "result": {
    "engine": "knitr",
    "markdown": "# Importação, Manipulação e Visualização de Dados com o R\n\nNesta aula, são apresentados diferentes métodos para importar, visualizar, manipular e representar graficamente dados a partir de diversas fontes, incluindo arquivos do Excel (com extensões .xlsx e .xls), arquivos no formato `.csv` e planilhas hospedadas no Google Sheets.\n\n### Arquivos Excel\n\nPara importar uma planilha do Excel com múltiplas abas, utiliza-se a função `read_excel()` do pacote `readxl`. O arquivo deve estar na mesma pasta do seu projeto.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(readxl)\nlibrary(tidyverse)\ndados <-read_excel(\"dados-diversos.xlsx\")\ndados\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 70 × 5\n   Cultura   rep Assess LeafDoctor ImageJ\n   <chr>   <dbl>  <dbl>      <dbl>  <dbl>\n 1 Rosa       21  20.0        31.6  26.0 \n 2 Rosa       22   4.77       13.5   5.16\n 3 Rosa       23  72.1        77.6  69.5 \n 4 Rosa       24  81.4        90.8  82.7 \n 5 Rosa       25  25.8        24.5  13.1 \n 6 Rosa       26  80.4        73.8  69.9 \n 7 Rosa       27  81.7        86.8  88.7 \n 8 Rosa       28   7.02       14.0   6.4 \n 9 Rosa       29  11.2        16.0  10.8 \n10 Rosa       30  79.1        77.0  78.2 \n# ℹ 60 more rows\n```\n\n\n:::\n\n```{.r .cell-code}\nstr(dados)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\ntibble [70 × 5] (S3: tbl_df/tbl/data.frame)\n $ Cultura   : chr [1:70] \"Rosa\" \"Rosa\" \"Rosa\" \"Rosa\" ...\n $ rep       : num [1:70] 21 22 23 24 25 26 27 28 29 30 ...\n $ Assess    : num [1:70] 19.95 4.77 72.11 81.37 25.78 ...\n $ LeafDoctor: num [1:70] 31.6 13.5 77.6 90.8 24.5 ...\n $ ImageJ    : num [1:70] 26.04 5.16 69.46 82.68 13.13 ...\n```\n\n\n:::\n\n```{.r .cell-code}\nglimpse(dados)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 70\nColumns: 5\n$ Cultura    <chr> \"Rosa\", \"Rosa\", \"Rosa\", \"Rosa\", \"Rosa\", \"Rosa\", \"Rosa\", \"Ro…\n$ rep        <dbl> 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,…\n$ Assess     <dbl> 19.95, 4.77, 72.11, 81.37, 25.78, 80.45, 81.69, 7.02, 11.23…\n$ LeafDoctor <dbl> 31.55, 13.53, 77.59, 90.83, 24.54, 73.84, 86.78, 14.04, 16.…\n$ ImageJ     <dbl> 26.04, 5.16, 69.46, 82.68, 13.13, 69.90, 88.66, 6.40, 10.82…\n```\n\n\n:::\n:::\n\n\nPara acessar uma aba específica (neste caso, a terceira planilha do arquivo), é usado o argumento `sheet`:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndados2 <- read_excel(\"dados-diversos.xlsx\",\n                    sheet = 2)\ndados2 <- dados2 |>\n  mutate(dose = as.numeric(dose)) #Convertendo a coluna dose para formato numérico\nstr(dados2)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\ntibble [240 × 9] (S3: tbl_df/tbl/data.frame)\n $ code       : chr [1:240] \"FGT05\" \"FGT05\" \"FGT05\" \"FGT05\" ...\n $ year       : num [1:240] 2007 2007 2007 2007 2007 ...\n $ trial      : num [1:240] 1 1 1 1 1 1 1 1 1 1 ...\n $ state      : chr [1:240] \"RS\" \"RS\" \"RS\" \"RS\" ...\n $ dose       : num [1:240] 0 0 0.05 0.05 0.5 0.5 1 1 5 5 ...\n $ replicate  : num [1:240] 1 2 1 2 1 2 1 2 1 2 ...\n $ germination: num [1:240] 46 44 18 24 9 11 0 0 0 0 ...\n $ ...8       : logi [1:240] NA NA NA NA NA NA ...\n $ ...9       : logi [1:240] NA NA NA NA NA NA ...\n```\n\n\n:::\n\n```{.r .cell-code}\nglimpse(dados2)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 240\nColumns: 9\n$ code        <chr> \"FGT05\", \"FGT05\", \"FGT05\", \"FGT05\", \"FGT05\", \"FGT05\", \"FGT…\n$ year        <dbl> 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007…\n$ trial       <dbl> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1…\n$ state       <chr> \"RS\", \"RS\", \"RS\", \"RS\", \"RS\", \"RS\", \"RS\", \"RS\", \"RS\", \"RS\"…\n$ dose        <dbl> 0.00, 0.00, 0.05, 0.05, 0.50, 0.50, 1.00, 1.00, 5.00, 5.00…\n$ replicate   <dbl> 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2…\n$ germination <dbl> 46, 44, 18, 24, 9, 11, 0, 0, 0, 0, 0, 0, 50, 50, 43, 44, 2…\n$ ...8        <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ ...9        <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n```\n\n\n:::\n:::\n\n\n### Leitura e Escrita de Arquivos CSV e Excel\n\nÉ possível ler um arquivo `.csv` com a função `read_csv` e, em seguida, exportá-lo para o formato `.xlsx`, utilizando a função `write_xlsx` do pacote `writexl` .\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncurve <- read_csv(\"curve.csv\")\n\nlibrary(writexl)\nwrite_xlsx(curve, \"curva2.xlsx\")\n```\n:::\n\n\n### Importação de Dados a partir do Google Sheets\n\nDados armazenados em planilhas do Google podem ser importados diretamente por meio do pacote `gsheet`:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(gsheet)\ndados_nuvem <- gsheet2tbl(\"https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit?pli=1&gid=373270992#gid=373270992\")\nview(dados_nuvem) #possibilita a visualização dos dados\n```\n:::\n\n\n## Filtragem, Agrupamento e Contagem\n\nÉ possível realizar **filtragem**, **agrupamento** e **contagem** de dados no R de forma simples e eficiente utilizando a combinação das funções `filter()`, `group_by()` e `count()` do pacote `dplyr`.\n\nPara ilustrar essas operações, será utilizado o conjunto de dados `survey`, importado diretamente de uma planilha do Google Sheets, contendo informações sobre espécies, resíduos e estados brasileiros ao longo dos anos.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsurvey <- gsheet2tbl(\"https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit?pli=1&gid=1118819738#gid=1118819738\")\nview(survey)\n```\n:::\n\n\n### Agrupamento e contagem\n\nA função `group_by()` organiza os dados em grupos com base em uma ou mais variáveis. Em seguida, `count()` contabiliza quantas observações existem em cada grupo.\n\nNo exemplo a seguir, agrupa-se o conjunto `survey` por `state` e `residue`, contando o número de registros de cada tipo de resíduo por estado:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsurvey |>\n  group_by(state, residue) |>\n  count()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3 × 3\n# Groups:   state, residue [3]\n  state residue     n\n  <chr> <chr>   <int>\n1 PR    <NA>      216\n2 RS    corn      169\n3 RS    soybean   281\n```\n\n\n:::\n:::\n\n\n### Filtragem de dados\n\nA função `filter()` permite selecionar apenas as linhas que atendem a uma condição específica. Por exemplo, para obter apenas os registros do estado do **Rio Grande do Sul (RS)** e do **Paraná (PR)**:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nRS <- survey |>\n  filter(state== \"RS\")\nPR <- survey |>\n  filter(state== \"PR\")\n```\n:::\n\n\nEsses dois subconjuntos podem ser combinados em um único conjunto de dados utilizando `rbind()`:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncombinado <- rbind(RS, PR)\n```\n:::\n\n\n### Seleção de colunas e filtragem por ano\n\nÉ possível selecionar apenas algumas colunas para facilitar análises específicas. Por exemplo, para trabalhar apenas com as colunas `year`, `state` e `species` pela função `dplyr::select`\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsurvey_b <- survey |>\n  dplyr::select(year, state, species)\n\nsurvey_b2009 <- survey |>\n  dplyr::select(year, state, species) |>\n  filter(year==2009)\n```\n:::\n\n\n### Tabela de frequência cruzada\n\nPara verificar quantas vezes cada espécie foi registrada em cada ano, é possível gerar uma tabela de frequência cruzada utilizando a função `tabyl()` do pacote `janitor` .\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(janitor)\nsurvey_b |>\n  tabyl(year, species)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n year Fgra Fspp\n 2009  225   40\n 2010  187   29\n 2011  140   45\n```\n\n\n:::\n:::\n\n\n# Visualização de Dados com `ggplot2`\n\nOs pacotes `tidyverse`, `ggplot2` e `ggthemes` serão usados para criar visualizações gráficas eficientes, permitindo uma análise rápida dos dados carregados no dataframe. A seguir, serão apresentados exemplos de gráficos aplicados ao conjunto de dados `survey_b`.\n\n## Visualização de Dados Categóricos com `ggplot2`\n\n### Gráfico de barras por espécie\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsurvey_b |>\n  group_by(year, species) |>\n  count() |>\n  ggplot(aes(species, n)) +\n  geom_col()\n```\n\n::: {.cell-output-display}\n![](Aula2_files/figure-html/unnamed-chunk-11-1.png){width=1344}\n:::\n:::\n\n\nAgrupa os dados por `year` e `species`, conta o número de ocorrências e gera um gráfico de colunas com o número total de registros por espécie. Os anos estão combinados em um único painel.\n\n### Gráfico de barras por ano\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsurvey_b |>\n  group_by(year, species) |>\n  count() |>\n  ggplot(aes(year, n)) +\n  geom_col()\n```\n\n::: {.cell-output-display}\n![](Aula2_files/figure-html/unnamed-chunk-12-1.png){width=1344}\n:::\n:::\n\n\n### Facetamento por ano\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsurvey_b |>\n  group_by(year, species) |>\n  count() |>\n  ggplot(aes(species, n)) +\n  geom_col() +\n  facet_wrap(~year)\n```\n\n::: {.cell-output-display}\n![](Aula2_files/figure-html/unnamed-chunk-13-1.png){width=1344}\n:::\n:::\n\n\nA função `facet_wrap` permite dividir um gráfico em múltiplos painéis, cada um representando um subconjunto dos dados baseado em uma variável categórica, no caso do exemplos os anos.\n\n### Gráfico colorido por espécie\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsurvey_b |>\n  group_by(year, species) |>\n  count() |>\n  ggplot(aes(year, n, fill = species)) +\n  geom_col() +\n  scale_fill_manual(values = c(\"red\", \"purple\"))\n```\n\n::: {.cell-output-display}\n![](Aula2_files/figure-html/unnamed-chunk-14-1.png){width=1344}\n:::\n:::\n\n\n## Gráficos de Boxplot para Dados Quantitativos\n\nAlém de categorias, também podemos visualizar **dados contínuos**. A seguir, criam-se gráficos para variáveis numéricas utilizando boxplots, que mostram a mediana, quartis e possíveis outliers.\n\n### Boxplot com dados do experimento com magnésio\n\nOs dados utilizados neste gráfico foram importados da planilha online. O conjunto `mg` contém informações sobre o comprimento de lesões sob diferentes tratamentos com magnésio.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmg <- gsheet2tbl(\"https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit?pli=1&gid=983033137#gid=983033137\")\nview(mg)\n\nlibrary(ggthemes)\nplot_mg <- mg |>\n  ggplot(aes(trat, comp))+\n  geom_boxplot(fill = \"grey\", outlier.color = NA)+\n  geom_jitter(width = 0.1, color = \"gray50\")+\n  scale_y_continuous(limits = c(0,20))+\n  labs(x= \"Tratamento\",\n       y= \"Comprimento (mm)\")\n```\n:::\n\n\nCada tratamento é representado em um boxplot. Pontos individuais são sobrepostos com `geom_jitter()`, o que ajuda a visualizar a dispersão dos dados.\n\n### Boxplot com taxa de crescimento micelial (tcm)\n\nOs dados foram obtidos da planilha online. A variável tcm representa a taxa de crescimento micelial de diferentes espécies. O gráfico abaixo mostra a comparação entre essas espécies:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmicelial <- gsheet2tbl(\"https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit?pli=1&gid=959387827#gid=959387827\")\nview(micelial)\n\nplot_micelial <- micelial |>\n ggplot(aes(reorder(especie, tcm), tcm))+\n  geom_boxplot(outlier.color = NA)+\n  geom_jitter(width = 0.1, color = \"gray50\")+\n  coord_flip()+\n  labs(x= \"\", y= \"Taxa de crescimento micelial (mm/dia)\")+\n  theme_minimal()\n```\n:::\n\n\n### Combinação de Gráficos com `patchwork`\n\nOs dois gráficos anteriores (magnésio e micélio) podem ser combinados em um único painel com o auxílio do pacote `patchwork`:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(patchwork)\n(plot_mg | plot_micelial) +\n  plot_annotation(tag_levels = \"a\")\n```\n\n::: {.cell-output-display}\n![](Aula2_files/figure-html/unnamed-chunk-17-1.png){width=1344}\n:::\n:::\n\n\nPor fim, os gráficos que foram gerados podem ser salvos utilizando a função `ggsave`. Essa função salva apenaso ultimo grafico gerado.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggsave(\"box.png\", bg = \"white\", width = 5, height = 5)\n```\n:::\n",
    "supporting": [
      "Aula2_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}